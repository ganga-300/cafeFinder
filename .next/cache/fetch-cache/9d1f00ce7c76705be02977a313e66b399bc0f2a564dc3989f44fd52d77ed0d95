{"kind":"FETCH","data":{"headers":{"accept-ranges":"bytes","access-control-allow-origin":"*","cache-control":"max-age=300","connection":"keep-alive","content-encoding":"gzip","content-length":"3277","content-security-policy":"default-src 'none'; style-src 'unsafe-inline'; sandbox","content-type":"text/plain; charset=utf-8","cross-origin-resource-policy":"cross-origin","date":"Fri, 25 Jul 2025 11:30:06 GMT","etag":"W/\"3afed7ea37e80becff94f456fc578ec686cf6c07c23e664c3394abb547f33428\"","expires":"Fri, 25 Jul 2025 11:35:06 GMT","source-age":"289","strict-transport-security":"max-age=31536000","vary":"Authorization,Accept-Encoding","via":"1.1 varnish","x-cache":"HIT","x-cache-hits":"0","x-content-type-options":"nosniff","x-fastly-request-id":"8611009d21ef49fcb2ed1adc19865cee6742d8f9","x-frame-options":"deny","x-github-request-id":"4F2C:08CF:73164:DC822:6883699A","x-served-by":"cache-del21722-DEL","x-timer":"S1753443007.560391,VS0,VE1","x-xss-protection":"1; mode=block"},"body":"WwogIHsKICAgICJpZCI6ICJwZXJmZWN0LWN1cCIsCiAgICAidGl0bGUiOiAiSG93IHRvIEJyZXcgdGhlIFBlcmZlY3QgQ3VwIiwKICAgICJkZXNjcmlwdGlvbiI6ICJEaXNjb3ZlciBleHBlcnQgdGlwcyBhbmQgdHJpY2tzIGZvciBicmV3aW5nIHRoZSBiZXN0IGNvZmZlZSBhdCBob21lLiIsCiAgICAiaW1hZ2UiOiAiL2JyZXdpbmcuanBnIiwKICAgICJjb250ZW50IjogIkJyZXdpbmcgdGhlIHBlcmZlY3QgY3VwIG9mIGNvZmZlZSBpcyBib3RoIGFuIGFydCBhbmQgYSBzY2llbmNlLiBCZWdpbiB3aXRoIGZyZXNoLCBoaWdoLXF1YWxpdHkgYmVhbnMgYW5kIGdyaW5kIHRoZW0ganVzdCBiZWZvcmUgYnJld2luZy4gVXNlIGZpbHRlcmVkIHdhdGVyIGF0IHRoZSByaWdodCB0ZW1wZXJhdHVyZSAoOTDigJM5NsKwQykgYW5kIGV4cGVyaW1lbnQgd2l0aCByYXRpb3MgKHVzdWFsbHkgMToxNiBjb2ZmZWUgdG8gd2F0ZXIpLiBUcnkgZGlmZmVyZW50IG1ldGhvZHMgbGlrZSBwb3VyLW92ZXIsIEZyZW5jaCBwcmVzcywgQWVyb1ByZXNzLCBvciBkcmlwIG1hY2hpbmVzIHRvIGZpbmQgeW91ciBpZGVhbCBmbGF2b3IuIEtlZXAgeW91ciBlcXVpcG1lbnQgY2xlYW4gYW5kIGFsd2F5cyBlbmpveSB0aGUgcHJvY2Vzc+KAlGl04oCZcyBwYXJ0IG9mIHRoZSByaXR1YWwuIgogIH0sCiAgewogICAgImlkIjogInRvcC0xMC1jYWZlcyIsCiAgICAidGl0bGUiOiAiVG9wIDEwIENhZmVzIGluIFlvdXIgQ2l0eSIsCiAgICAiZGVzY3JpcHRpb24iOiAiRXhwbG9yZSBvdXIgY3VyYXRlZCBsaXN0IG9mIHRoZSBtdXN0LXZpc2l0IGNhZmVzIG5lYXIgeW91IGZvciB0aGUgYmVzdCBjb2ZmZWUgZXhwZXJpZW5jZS4iLAogICAgImltYWdlIjogIi90b3AxMC5qcGciLAogICAgImNvbnRlbnQiOiAiV2XigJl2ZSBleHBsb3JlZCBhbmQgcmV2aWV3ZWQgZG96ZW5zIG9mIGNhZmVzIHRvIGJyaW5nIHlvdSB0aGUgdG9wIDEwIGluIHlvdXIgY2l0eS4gRnJvbSBjb3p5IG5vb2tzIHdpdGggaW5kaWUgdmliZXMgdG8gcG9wdWxhciBidXN0bGluZyBob3RzcG90cywgZWFjaCBvbmUgb2ZmZXJzIHNvbWV0aGluZyB1bmlxdWXigJR3aGV0aGVyIGl04oCZcyB0aGUgZXNwcmVzc28sIGFtYmlhbmNlLCBvciBzcGVjaWFsdHkgdHJlYXRzLiBWaWV3IG91ciBsaXN0IHRvIGRpc2NvdmVyIGhpZGRlbiBnZW1zIGFuZCBsb2NhbCBmYXZvcml0ZXMuIEJvbnVzOiByZWFkZXItc3VibWl0dGVkIGZhdm9yaXRlcyBpbmNsdWRlZCEiCiAgfSwKICB7CiAgICAiaWQiOiAiY29mZmVlLXBhaXJpbmdzIiwKICAgICJ0aXRsZSI6ICJDb2ZmZWUgYW5kIEZvb2QgUGFpcmluZ3MiLAogICAgImRlc2NyaXB0aW9uIjogIkxlYXJuIGhvdyB0byBlbGV2YXRlIHlvdXIgY29mZmVlIHdpdGggZGVsaWNpb3VzIHBhaXJpbmdzLiIsCiAgICAiaW1hZ2UiOiAiL3BhaXJpbmcuanBnIiwKICAgICJjb250ZW50IjogIlBhaXJpbmcgY29mZmVlIHdpdGggdGhlIHJpZ2h0IGZvb2QgY2FuIGVuaGFuY2UgYm90aCBmbGF2b3JzLiBGcnVpdHkgRXRoaW9waWFuIGJsZW5kcyBjb21wbGVtZW50IGNpdHJ1cyBkZXNzZXJ0cywgd2hpbGUgcmljaCBTdW1hdHJhbiBjb2ZmZWUgZ29lcyB3ZWxsIHdpdGggc3BpY2VkIHBhc3RyaWVzLiBUcnkgcGFpcmluZyBlc3ByZXNzbyB3aXRoIGRhcmsgY2hvY29sYXRlLCBjYXBwdWNjaW5vcyB3aXRoIGNyb2lzc2FudHMsIGFuZCBsYXR0ZXMgd2l0aCBjb29raWVzIG9yIGJhbmFuYSBicmVhZC4gQ2hlY2sgb3VyIGZ1bGwgZ3VpZGUgZm9yIHNlYXNvbmFsIHBhaXJpbmcgc3VnZ2VzdGlvbnMuIgogIH0sCiAgewogICAgImlkIjogImNvbGQtYnJldy1ndWlkZSIsCiAgICAidGl0bGUiOiAiVWx0aW1hdGUgR3VpZGUgdG8gQ29sZCBCcmV3IiwKICAgICJkZXNjcmlwdGlvbiI6ICJFdmVyeXRoaW5nIHlvdSBuZWVkIHRvIGtub3cgdG8gbWFrZSBzbW9vdGgsIHJlZnJlc2hpbmcgY29sZCBicmV3IGF0IGhvbWUuIiwKICAgICJpbWFnZSI6ICIvY29sZC1icmV3LmpwZyIsCiAgICAiY29udGVudCI6ICJDb2xkIGJyZXcgaXMgZWFzeSB0byBtYWtlIGFuZCBwZXJmZWN0IGZvciBob3QgZGF5cy4gVXNlIGEgY29hcnNlIGdyaW5kIGFuZCBtaXggd2l0aCBjb2xkLCBmaWx0ZXJlZCB3YXRlciBhdCBhIDE6OCByYXRpby4gTGV0IGl0IHN0ZWVwIGluIHRoZSBmcmlkZ2UgZm9yIDEy4oCTMTggaG91cnMsIHRoZW4gc3RyYWluIHVzaW5nIGEgZmluZSBtZXNoIG9yIGNoZWVzZWNsb3RoLiBTZXJ2ZSBvdmVyIGljZSwgYW5kIG9wdGlvbmFsbHkgZGlsdXRlIHdpdGggbWlsayBvciB3YXRlci4gQWRkIHN5cnVwcyBvciBjaXRydXMgemVzdCBmb3IgYSB0d2lzdCEiCiAgfSwKICB7CiAgICAiaWQiOiAiY2FmZS1kZWNvci10cmVuZHMiLAogICAgInRpdGxlIjogIjIwMjQgQ2FmZSBEZWNvciBUcmVuZHMiLAogICAgImRlc2NyaXB0aW9uIjogIkRpc2NvdmVyIHRoZSBob3R0ZXN0IGludGVyaW9yIGRlc2lnbiB0cmVuZHMgaW4gY2FmZXMgdGhpcyB5ZWFyLiIsCiAgICAiaW1hZ2UiOiAiL2RlY29yLmpwZyIsCiAgICAiY29udGVudCI6ICJGcm9tIG1pbmltYWxpc3QgU2NhbmRpbmF2aWFuIHZpYmVzIHRvIGx1c2gsIHBsYW50LWZpbGxlZCBjb3JuZXJzLCAyMDI0IGlzIGFsbCBhYm91dCBjb21mb3J0LCBzdXN0YWluYWJpbGl0eSwgYW5kIEluc3RhZ3JhbS13b3J0aHkgYWVzdGhldGljcy4gV2FybSBsaWdodGluZywgdmludGFnZSBmdXJuaXR1cmUsIHRlcnJhenpvIGNvdW50ZXJ0b3BzLCBhbmQgZWFydGh5IHRvbmVzIGRvbWluYXRlIHRoZSBkZXNpZ24gc2NlbmUuIExvb2sgb3V0IGZvciBtb3JlIERJWSB3YWxscywgY3VyYXRlZCBhcnQgZGlzcGxheXMsIGFuZCBzZW5zb3J5LWZyaWVuZGx5IHNlYXRpbmcgem9uZXMuIgogIH0sCiAgewogICAgImlkIjogImVzcHJlc3NvLWJhc2ljcyIsCiAgICAidGl0bGUiOiAiRXNwcmVzc28gQmFzaWNzOiBXaGF0IFlvdSBOZWVkIHRvIEtub3ciLAogICAgImRlc2NyaXB0aW9uIjogIkEgYmVnaW5uZXLigJlzIGd1aWRlIHRvIG1ha2luZyBhbmQgdW5kZXJzdGFuZGluZyBlc3ByZXNzby4iLAogICAgImltYWdlIjogIi9lc3ByZXNzby5qcGciLAogICAgImNvbnRlbnQiOiAiRXNwcmVzc28gaXMgdGhlIGhlYXJ0IG9mIG1hbnkgY29mZmVlIGRyaW5rcy4gS2V5IGNvbXBvbmVudHMgaW5jbHVkZSBncmluZCBzaXplIChmaW5lKSwgcHJvcGVyIHRhbXBpbmcgKGV2ZW4gcHJlc3N1cmUpLCBhbmQgcHJlY2lzZSBleHRyYWN0aW9uICgyNeKAkzMwIHNlY29uZHMpLiBVc2UgZnJlc2ggYmVhbnMgYW5kIHByZWhlYXQgeW91ciBtYWNoaW5lLiBBIGdvb2Qgc2hvdCBzaG91bGQgaGF2ZSBhIHRoaWNrIGNyZW1hIGFuZCBiYWxhbmNlZCB0YXN0ZeKAlG5vdCB0b28gYml0dGVyLCBub3QgdG9vIHNvdXIuIgogIH0sCiAgewogICAgImlkIjogIm91dGRvb3Itc2VhdGluZyIsCiAgICAidGl0bGUiOiAiQmVzdCBDYWZlcyB3aXRoIE91dGRvb3IgU2VhdGluZyIsCiAgICAiZGVzY3JpcHRpb24iOiAiRW5qb3kgeW91ciBjb2ZmZWUgaW4gdGhlIG9wZW4gYWlyIGF0IHRoZXNlIHRvcC1yYXRlZCBzcG90cy4iLAogICAgImltYWdlIjogIi9vdXRkb29yLXNlYXRpbmcuanBnIiwKICAgICJjb250ZW50IjogIkZyb20gZ2FyZGVuIHBhdGlvcyB0byByb29mdG9wIHZpZXdzLCB0aGVzZSBjYWZlcyBvZmZlciB0aGUgYmVzdCBvdXRkb29yIHNlYXRpbmcgZXhwZXJpZW5jZXMuIFdoZXRoZXIgeW91IHdhbnQgc3VubGl0IG1vcm5pbmdzIG9yIGJyZWV6eSBldmVuaW5ncywgb3VyIHBpY2tzIGluY2x1ZGUgV2ktRmktZnJpZW5kbHkgc3BvdHMsIHBldC1mcmllbmRseSB6b25lcywgYW5kIG5hdHVyZS1maWxsZWQgZW52aXJvbm1lbnRzIHBlcmZlY3QgZm9yIHJlbGF4aW5nIHdpdGggYSBsYXR0ZS4iCiAgfSwKICB7CiAgICAiaWQiOiAibGF0dGUtYXJ0IiwKICAgICJ0aXRsZSI6ICJMYXR0ZSBBcnQgZm9yIEJlZ2lubmVycyIsCiAgICAiZGVzY3JpcHRpb24iOiAiU3RlcC1ieS1zdGVwIGd1aWRlIHRvIGNyZWF0aW5nIGJlYXV0aWZ1bCBsYXR0ZSBhcnQgYXQgaG9tZS4iLAogICAgImltYWdlIjogIi9sYXR0ZS1hcnQuanBnIiwKICAgICJjb250ZW50IjogIlN0YXJ0IHdpdGggd2VsbC1zdGVhbWVkLCBtaWNyb2ZvYW1lZCBtaWxrIGFuZCBmcmVzaGx5IHB1bGxlZCBlc3ByZXNzby4gUG91ciBzdGVhZGlseSBhbmQgcHJhY3RpY2UgY2xhc3NpYyBzaGFwZXMgbGlrZSBoZWFydHMsIHJvc2V0dGFzLCBhbmQgdHVsaXBzLiBVc2UgYSB3aWRlIGN1cCBmb3IgYmV0dGVyIGNvbnRyb2wuIERvbuKAmXQgd29ycnkgaWYgaXTigJlzIG5vdCBwZXJmZWN04oCUbWFzdGVyeSBjb21lcyB3aXRoIHByYWN0aWNlISBCb251czogdGlwcyBvbiBmaXhpbmcgY29tbW9uIG1pbGstc3RlYW1pbmcgbWlzdGFrZXMuIgogIH0sCiAgewogICAgImlkIjogIndvcmtpbmctY2FmZXMiLAogICAgInRpdGxlIjogIlRvcCBDYWZlcyBmb3IgUmVtb3RlIFdvcmsiLAogICAgImRlc2NyaXB0aW9uIjogIkZpbmQgdGhlIGJlc3QgY2FmZXMgZm9yIHByb2R1Y3Rpdml0eSwgY29tZm9ydCwgYW5kIGdyZWF0IGNvZmZlZS4iLAogICAgImltYWdlIjogIi93b3JraW5nLXpvbmVzLmpwZyIsCiAgICAiY29udGVudCI6ICJSZW1vdGUgd29yayBpcyBiZXR0ZXIgd2l0aCBnb29kIGNvZmZlZS4gT3VyIHRvcCBwaWNrcyBoYXZlIGZhc3QgV2ktRmksIHBsZW50eSBvZiBwbHVncywgcXVpZXQgYXRtb3NwaGVyZXMsIGFuZCBncmVhdCBsYXR0ZXMuIElkZWFsIGZvciBzdHVkZW50cywgZnJlZWxhbmNlcnMsIG9yIGFueW9uZSBuZWVkaW5nIGEgZnJlc2ggd29ya3NwYWNlLiBXZeKAmXZlIGFsc28gaW5jbHVkZWQgY2FmZXMgd2l0aCBjb21tdW5pdHkgZXZlbnRzIGFuZCBjb3dvcmtpbmctc3R5bGUgdmliZXMuIgogIH0sCiAgewogICAgImlkIjogImhvbWVtYWRlLXN5cnVwcyIsCiAgICAidGl0bGUiOiAiSG9tZW1hZGUgQ29mZmVlIFN5cnVwcyIsCiAgICAiZGVzY3JpcHRpb24iOiAiQWRkIGN1c3RvbSBmbGF2b3JzIHRvIHlvdXIgZHJpbmtzIHdpdGggdGhlc2UgZWFzeSBzeXJ1cCByZWNpcGVzLiIsCiAgICAiaW1hZ2UiOiAiL2hvbWVtYWRlLmpwZyIsCiAgICAiY29udGVudCI6ICJNYWtlIHlvdXIgb3duIHZhbmlsbGEsIGNhcmFtZWwsIGFuZCBoYXplbG51dCBzeXJ1cHMgdXNpbmcganVzdCBzdWdhciwgd2F0ZXIsIGFuZCBmbGF2b3JpbmcuIFN0b3JlIGluIHRoZSBmcmlkZ2UgZm9yIHVwIHRvIHR3byB3ZWVrcy4gQWRkIHRoZW0gdG8gbGF0dGVzLCBpY2VkIGNvZmZlZXMsIG9yIGNvbGQgYnJld3MgZm9yIGEgY2Fmw6ktc3R5bGUgZXhwZXJpZW5jZSBhdCBob21lLiBCb251cyByZWNpcGVzOiBwdW1wa2luIHNwaWNlLCBsYXZlbmRlciwgYW5kIGNpbm5hbW9uIGJyb3duIHN1Z2FyLiIKICB9LAogIHsKICAgICJpZCI6ICJjb2ZmZWUtc3Vic2NyaXB0aW9uIiwKICAgICJ0aXRsZSI6ICJJcyBhIENvZmZlZSBTdWJzY3JpcHRpb24gV29ydGggSXQ/IiwKICAgICJkZXNjcmlwdGlvbiI6ICJXZWlnaCB0aGUgcHJvcyBhbmQgY29ucyBvZiBwb3B1bGFyIGNvZmZlZSBiZWFuIHN1YnNjcmlwdGlvbiBzZXJ2aWNlcy4iLAogICAgImltYWdlIjogIi9zdWJzY3JpcHRpb24uanBnIiwKICAgICJjb250ZW50IjogIkNvZmZlZSBzdWJzY3JpcHRpb25zIGRlbGl2ZXIgZnJlc2hseSByb2FzdGVkIGJlYW5zIHJpZ2h0IHRvIHlvdXIgZG9vci4gVGhleSBvZmZlciBjb252ZW5pZW5jZSwgdmFyaWV0eSwgYW5kIG9mdGVuIGludHJvZHVjZSB5b3UgdG8gbmV3IHJvYXN0ZXJzLiBCdXQgYXJlIHRoZXkgd29ydGggdGhlIHByaWNlPyBXZSBicmVhayBkb3duIG9wdGlvbnMgYmFzZWQgb24gcHJpY2luZywgZmxhdm9yIHByb2ZpbGVzLCBzaGlwcGluZyBzY2hlZHVsZXMsIGFuZCBjdXN0b21pemF0aW9uLiIKICB9LAogIHsKICAgICJpZCI6ICJjb2ZmZWUtaGlzdG9yeSIsCiAgICAidGl0bGUiOiAiQSBCcmllZiBIaXN0b3J5IG9mIENvZmZlZSIsCiAgICAiZGVzY3JpcHRpb24iOiAiRXhwbG9yZSBjb2ZmZWXigJlzIGZhc2NpbmF0aW5nIGpvdXJuZXkgZnJvbSBhbmNpZW50IEV0aGlvcGlhIHRvIG1vZGVybiBjYWZlcy4iLAogICAgImltYWdlIjogIi9oaXN0b3J5LmpwZyIsCiAgICAiY29udGVudCI6ICJDb2ZmZWUgaGFzIGEgcmljaCBwYXN0LCBiZWdpbm5pbmcgd2l0aCBLYWxkaeKAmXMgbGVnZW5kYXJ5IGdvYXQgZGlzY292ZXJ5IGluIEV0aGlvcGlhLiBGcm9tIFN1Zmkgcml0dWFscyBpbiBZZW1lbiB0byBQYXJpc2lhbiBzYWxvbnMgYW5kIGdsb2JhbCBmcmFuY2hpc2VzLCBjb2ZmZWUgaGFzIGZ1ZWxlZCByZXZvbHV0aW9ucywgdHJhZGUsIGFuZCBjb252ZXJzYXRpb24uIExlYXJuIGhvdyB0aGlzIGh1bWJsZSBiZWFuIGJlY2FtZSB0aGUgd29ybGTigJlzIGZhdm9yaXRlIGJldmVyYWdlLiIKICB9LAogIHsKICAgICJpZCI6ICJlY28tZnJpZW5kbHktY2FmZXMiLAogICAgInRpdGxlIjogIkVjby1GcmllbmRseSBDYWZlcyBEb2luZyBJdCBSaWdodCIsCiAgICAiZGVzY3JpcHRpb24iOiAiRGlzY292ZXIgY2FmZXMgbWFraW5nIGEgZGlmZmVyZW5jZSB3aXRoIHN1c3RhaW5hYmxlIHByYWN0aWNlcy4iLAogICAgImltYWdlIjogIi9lY28tY2FmZXMuanBnIiwKICAgICJjb250ZW50IjogIlRoZXNlIGNhZmVzIHVzZSBjb21wb3N0YWJsZSBjdXBzLCBsb2NhbCBpbmdyZWRpZW50cywgYW5kIHplcm8td2FzdGUgcG9saWNpZXMgdG8gcmVkdWNlIHRoZWlyIGVudmlyb25tZW50YWwgZm9vdHByaW50LiBTb21lIGV2ZW4gcm9hc3QgdXNpbmcgc29sYXIgZW5lcmd5IG9yIG9mZmVyIGRpc2NvdW50cyBmb3IgcmV1c2FibGUgbXVncy4gU3VwcG9ydCBidXNpbmVzc2VzIHRoYXQgYWxpZ24gd2l0aCB5b3VyIHZhbHVlcyB3aGlsZSBzaXBwaW5nIGdyZWF0IGNvZmZlZS4iCiAgfSwKICB7CiAgICAiaWQiOiAiY29mZmVlLW15dGhzIiwKICAgICJ0aXRsZSI6ICJCdXN0aW5nIENvbW1vbiBDb2ZmZWUgTXl0aHMiLAogICAgImRlc2NyaXB0aW9uIjogIklzIGNvZmZlZSBkZWh5ZHJhdGluZz8gRG9lcyBpdCBzdHVudCBncm93dGg/IFdlIGJ1c3QgdGhlc2UgbXl0aHMgYW5kIG1vcmUuIiwKICAgICJpbWFnZSI6ICIvbXl0aHMuanBnIiwKICAgICJjb250ZW50IjogIlRoZXJlIGFyZSBtYW55IG1pc2NvbmNlcHRpb25zIGFib3V0IGNvZmZlZTogaXQncyBiYWQgZm9yIHlvdXIgaGVhcnQsIGl0IGRlaHlkcmF0ZXMgeW91LCBvciBpdCBjYXVzZXMgaW5zb21uaWEuIFNjaWVuY2Ugc2F5cyBvdGhlcndpc2UuIExlYXJuIHRoZSB0cnV0aCBiZWhpbmQgdGhlc2UgbXl0aHMgYW5kIGRyaW5rIHlvdXIgYnJldyB3aXRoIGNvbmZpZGVuY2XigJRtb2RlcmF0aW9uIGFuZCB0aW1pbmcgYXJlIGtleSEiCiAgfSwKICB7CiAgICAiaWQiOiAiY29mZmVlLXRhc3RpbmciLAogICAgInRpdGxlIjogIkNvZmZlZSBUYXN0aW5nIDEwMSIsCiAgICAiZGVzY3JpcHRpb24iOiAiTGVhcm4gaG93IHRvIHRhc3RlIGNvZmZlZSBsaWtlIGEgcHJvLiIsCiAgICAiaW1hZ2UiOiAiL3Rhc3RpbmcuanBnIiwKICAgICJjb250ZW50IjogIkp1c3QgbGlrZSB3aW5lLCBjb2ZmZWUgaGFzIGNvbXBsZXggZmxhdm9ycy4gRGlzY292ZXIgaG93IHRvIGlkZW50aWZ5IHRhc3Rpbmcgbm90ZXMgbGlrZSBmbG9yYWwsIG51dHR5LCBjaG9jb2xhdGV5LCBvciBjaXRydXMuIFdlIGV4cGxhaW4gYXJvbWEsIGJvZHksIGFjaWRpdHksIGFuZCBhZnRlcnRhc3Rl4oCUYW5kIGhvdyB0byBpbXByb3ZlIHlvdXIgcGFsYXRlIHRocm91Z2ggY3VwcGluZyBwcmFjdGljZXMgYXQgaG9tZS4iCiAgfQpdCg==","status":200,"url":"https://raw.githubusercontent.com/ganga-300/Data/main/coffee.json"},"revalidate":31536000,"tags":[]}